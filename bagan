#!/bin/bash
set -e
type=$1
mode=$2

color() {
      printf '\033[%sm%s\033[m\n' "$@"
}

. scripts/log.sh
. scripts/command_helm.sh
. scripts/command_bagan.sh
. scripts/command_cluster.sh
. scripts/command_secret.sh
. scripts/command_utils.sh
. scripts/command_end.sh
. scripts/mode_gcloud.sh
. scripts/mode_gcloud_docker.sh
. scripts/mode_standalone.sh
. scripts/mode_standalone.sh
. scripts/validations.sh

echo ""
echo "Welcome to Bagan"
echo ""

if [ "$type" == "gcloud" ]; then
 requeriments="   -- jq: https://stedolan.github.io/jq/
   -- gcloud: https://cloud.google.com/sdk/
   -- docker: https://www.docker.com/
   -- kscript: https://github.com/holgerbrandl/kscript"

elif [ "$type" == "gcloud_docker" ]; then
  requeriments="     -- jq: https://stedolan.github.io/jq/
     -- docker: https://www.docker.com/"

elif [ "$type" == "standalone" ]; then
  requeriments="   -- Setup locally kubectl in the execution machine
     -- kscript: https://github.com/holgerbrandl/kscript"
else
  echo "error : Be sure you have included the bagan_conf.json with the desired configuration."
fi

log ""
log "Requeriments for your $type environment selection:"
log "$requeriments"
log ""
log "Values:"
log "type: $type"
log "cluster: $cluster"
log "zone: $zone"
log "machine: $machine"
log "repository: $repository"
log "private repository: $private"
if [ "$private" == "true" ]; then
    log "ssh key path: $ssh"
    log "known hosts path: $known_hosts"
fi
log "gradleCommand: $gradleCommand"
log "properties: $properties"
log ""
if  [ "$mode" == "experiment" ] && ([ "$type" == "gcloud" ] || [ "$type" == "gcloud_docker" ]) ; then
  log "In case you are running experiments, not for the first time, and you didn't remove it from Gcloud console, you can delete previous experiment releases with:"
  log "helm del --purge \$( helm ls --all experimen* --short)"
  log ""
fi;
echo -n "Do you want to continue [y/n]: "
read ans

if [ "$ans" != "y" ] || [ -z "$ans" ]; then
  exit 1
fi;

log "Staring Bagan"

rm -rf tmp
mkdir tmp

cp -r k8s/grafana tmp/
cp -r k8s/influxdb tmp/
cp -r docker/installer/bin/creator tmp/
cp -r docker/pod/bin/ tmp

if [ $type == "gcloud" ]; then
  log "Running gcloud"
  gcloudExecutor
  echo "$(endGcloud)"
elif [ $type == "gcloud_docker" ]; then
  log "Running gcloud docker"
  gcloudDockerExecutor
elif [ $type == "standalone" ]; then
  log "Runing standalone"
  standaloneExecutor
else
  error "Error: no type parsed properly "
  exit 1
fi
