#!/bin/bash
set -e
mode=$1
command=$2

dockerBaganInitVersion="0.1.6"

. scripts/log.sh
. scripts/command_infra.sh
. scripts/command_helm.sh
. scripts/command_bagan.sh
. scripts/command_cluster.sh
. scripts/command_secret.sh
. scripts/command_utils.sh
. scripts/command_end.sh
. scripts/mode_gcloud.sh
. scripts/mode_gcloud_docker.sh
. scripts/mode_standalone.sh

log ""
color '32;1' "Welcome to Bagan"
log "mode: $mode"
log "command: $command"

log ""

. scripts/validations.sh

if [ "$mode" == "gcloud" ]; then
 requeriments="   - jq: https://stedolan.github.io/jq/
   - gcloud: https://cloud.google.com/sdk/
   - docker: https://www.docker.com/
   - kscript: https://github.com/holgerbrandl/kscript"

elif [ "$mode" == "gcloud_docker" ]; then
  requeriments="     - jq: https://stedolan.github.io/jq/
   - docker: https://www.docker.com/"

elif [ "$mode" == "standalone" ]; then
  requeriments="   - Setup locally kubectl in the execution machine
   - kscript: https://github.com/holgerbrandl/kscript"
else
  echo "error : Be sure you have included the bagan_conf.json with the desired configuration."
fi

log ""
log "Requeriments for your $mode environment selection:"
log "$requeriments"
log ""
log "Values bagan_conf.json:"
log "  -mode: $mode"
log "  -cluster: $cluster"
log "  -zone: $zone"
log "  -machine: $machine"
log "  -repository: $repository"
log "  -private repository: $private"
if [ "$private" == "true" ]; then
    log "  -ssh key path: $ssh"
    log "  -known hosts path: $known_hosts"
fi
log "  -gradleCommand: $gradleCommand"
log "  -Experiments:"
if [ "$properties" != "null" ]; then
  log "    -properties: $properties"
fi
if [ "$branch" != "null" ]; then
  log "    -branch: $branch"
fi
if [ "$gradleWrapper" != "null" ]; then
  log "    -gradleWrapper: $gradleWrapper"
fi
log ""

echo -n "Do you want to continue [y/n]: "
read ans
if [ "$ans" != "y" ] || [ -z "$ans" ]; then
  exit 1
fi;

log "Staring Bagan"

log "Creating tmp folder"
rm -rf tmp
mkdir tmp
log "copying charts and binaries to tmp"
cp -r k8s/grafana tmp/
cp -r k8s/influxdb tmp/
cp -r docker/installer/bin/generator tmp/
cp -r docker/pod/bin/ tmp

log "Running mode $mode"

if [ $mode == "gcloud" ]; then
  gcloudExecutor
elif [ $mode == "gcloud_docker" ]; then
  gcloudDockerExecutor
elif [ $mode == "standalone" ]; then
  standaloneExecutor
else
  error "Error: no type parsed properly "
  exit 1
fi
